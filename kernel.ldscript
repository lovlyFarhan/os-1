/* Script for -z combreloc: combine and sort reloc sections */
OUTPUT_FORMAT("elf32-littlearm", "elf32-bigarm",
	      "elf32-littlearm")
OUTPUT_ARCH(arm)
ENTRY(_start)
SEARCH_DIR("/opt/local/arm-none-eabi/lib");
SECTIONS
{
    __KernelStart = 2 * 1024 * 1024 * 1024;
    __PhysicalRamSize = 256 * 1024 * 1024;

    . = 0x0;

    .early.text :
        {
        kernel/early-*.ko(.text.early.vector)
        kernel/early-*.ko(.text)
        }

    .early.data :
        {
        kernel/early-*.ko(.data .data.*)
        kernel/early-*.ko(.bss .bss.*)
        }

    . = ALIGN(CONSTANT(MAXPAGESIZE));
    begin_high = .;

    .text (begin_high + __KernelStart) : AT(begin_high)
        ALIGN(CONSTANT(MAXPAGESIZE))
        {
            *(.text)
        }

    .data :
        ALIGN(CONSTANT(MAXPAGESIZE))
        {
            *(.data)
            *(.rodata)
        }

    .init_array :
        {
        PROVIDE_HIDDEN(__init_array_start = .);
        KEEP (*(SORT(.init_array.*)))
        KEEP (*(.init_array))
        PROVIDE_HIDDEN (__init_array_end = .);
        }

    .bss :
        ALIGN(CONSTANT(MAXPAGESIZE))
        {
            *(.bss)
        }

    /* Hop forward in virtual memory to the ARM high vector table address */
    .vector 0xffff0000 : AT(ALIGN(LOADADDR(.bss) + SIZEOF(.bss), CONSTANT(COMMONPAGESIZE)))
        {
            __VectorStartPhysical = LOADADDR(.vector);
            *(.text.vector)
        }

    /* Reset VMA counter as though .vector had been in normal kernel range */
    . = ADDR(.bss)
            + (LOADADDR(.vector) - LOADADDR(.bss))  /* Padded sizeof(.bss) */
            + SIZEOF(.vector);

    __HeapStart = ALIGN(CONSTANT(MAXPAGESIZE));
    __RamEnd = __KernelStart + __PhysicalRamSize;
}
