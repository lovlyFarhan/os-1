#ifndef __MMU_H__
#define __MMU_H__

#include <stdint.h>
#include "decls.h"
#include "vm.h"

extern int mmu_get_enabled (void);
extern void mmu_set_enabled (int enable);

extern physaddr_t mmu_get_pagetable_base (void);
extern void mmu_set_pagetable_base (physaddr_t newbase);

typedef uint32_t pt_firstlevel_t;

enum
{
    PT_FIRSTLEVEL_MAPTYPE_SHIFT = 0,
    PT_FIRSTLEVEL_MAPTYPE_BITS  = 2,
    PT_FIRSTLEVEL_MAPTYPE_MASK  = (0b11 << PT_FIRSTLEVEL_MAPTYPE_SHIFT),

    PT_FIRSTLEVEL_MAPTYPE_UNMAPPED  = (0b00 << PT_FIRSTLEVEL_MAPTYPE_SHIFT),
    PT_FIRSTLEVEL_MAPTYPE_SECTION   = (0b10 << PT_FIRSTLEVEL_MAPTYPE_SHIFT),
    PT_FIRSTLEVEL_MAPTYPE_COARSE    = (0b10 << PT_FIRSTLEVEL_MAPTYPE_SHIFT),
    PT_FIRSTLEVEL_MAPTYPE_FINE      = (0b11 << PT_FIRSTLEVEL_MAPTYPE_SHIFT),

    PT_FIRSTLEVEL_DOMAIN_SHIFT  = 5,
    PT_FIRSTLEVEL_DOMAIN_BITS   = 4,
    PT_FIRSTLEVEL_DOMAIN_MASK   = (0b1111 << PT_FIRSTLEVEL_DOMAIN_SHIFT),

    PT_FIRSTLEVEL_SECTION_BASE_ADDR_SHIFT = 20,
    PT_FIRSTLEVEL_SECTION_BASE_ADDR_BITS  = 12,
    PT_FIRSTLEVEL_SECTION_BASE_ADDR_MASK  = (0xfff << PT_FIRSTLEVEL_SECTION_BASE_ADDR_SHIFT),

    PT_FIRSTLEVEL_SECTION_AP_SHIFT              = 10,
    PT_FIRSTLEVEL_SECTION_AP_BITS               = 2,
    PT_FIRSTLEVEL_SECTION_AP_MASK               = (0b11 << PT_FIRSTLEVEL_SECTION_AP_SHIFT),

    PT_FIRSTLEVEL_SECTION_AP_NONE               = 0b00 << PT_FIRSTLEVEL_SECTION_AP_SHIFT,
    PT_FIRSTLEVEL_SECTION_AP_PRIV_ONLY          = 0b01 << PT_FIRSTLEVEL_SECTION_AP_SHIFT,
    PT_FIRSTLEVEL_SECTION_AP_PRIV_AND_USER_READ = 0b10 << PT_FIRSTLEVEL_SECTION_AP_SHIFT,
    PT_FIRSTLEVEL_SECTION_AP_FULL               = 0b11 << PT_FIRSTLEVEL_SECTION_AP_SHIFT,
};

#endif /* __MMU_H__ */
